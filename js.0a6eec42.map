{"version":3,"sources":["js/index.js"],"names":["setPixelsFromBatches","canvas","pixelBatches","canvasContext","getContext","imageData","getImageData","screenWidth","screenHeight","pixelIndex","batchIndex","pixelIndexInBatch","individualPixelMask","shift","pixelValue","Math","floor","pixelColor","colorMap","data","putImageData","document","addEventListener","event","Elm","Main","init","node","getElementById","ports","subscribe","elmData","canvasId"],"mappings":";;;AAyCA,aAzCA,IAAA,EAAA,QAAA,mBAcA,SAASA,EAAsBC,EAAQC,GAIhC,IAHCC,IAAAA,EAAgBF,EAAOG,WAAW,MAClCC,EAAYF,EAAcG,aAAa,EAAG,EAAGC,EAAaC,GAEvDC,EAAa,EAAGA,EAAaF,EAAcC,EAAcC,IAAc,CACxEC,IACAC,EAAoBF,EAAa,GAEjCG,EAAsB,aAA4D,EAApBD,EAC9DE,EAAQ,GAA0B,EAApBF,EAEdG,GAAcZ,EANDa,KAAKC,MAAMP,EAAa,KAMIG,KAAyBC,EAClEI,EAAaC,EAASJ,GAE5BT,EAAUc,KAAkB,EAAbV,EAAiB,GAAKQ,EAAW,GAChDZ,EAAUc,KAAkB,EAAbV,EAAiB,GAAKQ,EAAW,GAChDZ,EAAUc,KAAkB,EAAbV,EAAiB,GAAKQ,EAAW,GAChDZ,EAAUc,KAAkB,EAAbV,EAAiB,GAAK,IAGvCN,EAAciB,aAAaf,EAAW,EAAG,GAhC3CgB,SAASC,iBAAiB,mBAAoB,SAAUC,GAC1CC,EAAIC,IAAAA,KAAKC,KAAK,CACxBC,KAAMN,SAASO,eAAe,YAG5BC,MAAM7B,qBAAqB8B,UAAU,SAAUC,GAGjD/B,EAFeqB,SAASO,eAAeG,EAAQC,UAElBD,EAAQ7B,kBA2BzC,IAAMK,EAAc,IAEdC,EAAe,IAEfU,EAAW,CACf,CAAC,IAAK,IAAK,IACX,CAAC,IAAK,IAAK,IACX,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI","file":"js.0a6eec42.map","sourceRoot":"../src","sourcesContent":["import { Elm } from '../elm/Main.elm'\n\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  const app = Elm.Main.init({\n    node: document.getElementById('elmboy')\n  })\n\n  app.ports.setPixelsFromBatches.subscribe(function (elmData) {\n    const canvas = document.getElementById(elmData.canvasId)\n\n    setPixelsFromBatches(canvas, elmData.pixelBatches)\n  })\n})\n\nfunction setPixelsFromBatches (canvas, pixelBatches) {\n  const canvasContext = canvas.getContext('2d')\n  const imageData = canvasContext.getImageData(0, 0, screenWidth, screenHeight)\n\n  for (let pixelIndex = 0; pixelIndex < screenWidth * screenHeight; pixelIndex++) {\n    const batchIndex = Math.floor(pixelIndex / 16)\n    const pixelIndexInBatch = pixelIndex % 16\n\n    const individualPixelMask = 0b11000000000000000000000000000000 >>> (pixelIndexInBatch * 2)\n    const shift = 30 - (pixelIndexInBatch * 2)\n\n    const pixelValue = (pixelBatches[batchIndex] & individualPixelMask) >>> shift\n    const pixelColor = colorMap[pixelValue]\n\n    imageData.data[pixelIndex * 4 + 0] = pixelColor[0]\n    imageData.data[pixelIndex * 4 + 1] = pixelColor[1]\n    imageData.data[pixelIndex * 4 + 2] = pixelColor[2]\n    imageData.data[pixelIndex * 4 + 3] = 255\n  }\n\n  canvasContext.putImageData(imageData, 0, 0)\n}\n\nconst screenWidth = 160\n\nconst screenHeight = 144\n\nconst colorMap = [\n  [155, 188, 15],\n  [139, 172, 15],\n  [48, 98, 48],\n  [15, 56, 15]\n]\n"]}